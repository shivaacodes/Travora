generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  name         String
  username     String        @unique
  passwordHash String
  provider     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  profile      Profile?
  deals        Deal[]
  transactions Transaction[]
  messages     Message[]
}

model Account {
  id Int @id @default(autoincrement())
}

model Profile {
  id          Int    @id @default(autoincrement())
  userId      Int    @unique
  bio         String
  preferences Json
  rating      Float  @default(0)
  user        User   @relation(fields: [userId], references: [id])
}

model Deal {
  id           Int           @id @default(autoincrement())
  title        String
  description  String
  price        Float
  location     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  imageURL     String?
  dealType     DealType
  userId       Int
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
  messages     Message[]
}

enum DealType {
  FLIGHT
  HOTEL
  EVENT
  OTHER
}

model Transaction {
  id        Int               @id @default(autoincrement())
  dealId    Int
  buyerId   Int
  sellerId  Int
  price     Float
  status    TransactionStatus
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt

  deal   Deal  @relation(fields: [dealId], references: [id])
  //buyer  User  @relation("BuyerTransaction", fields: [buyerId], references: [id])
  //seller User  @relation("SellerTransaction", fields: [sellerId], references: [id])
  User   User? @relation(fields: [userId], references: [id])
  userId Int?
}

enum TransactionStatus {
  PENDING
  COMPLETED
  CANCELLED
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  userId    Int
  dealId    Int

  user User @relation(fields: [userId], references: [id])
  deal Deal @relation(fields: [dealId], references: [id])
}
